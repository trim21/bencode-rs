name: Reusable workflow example

on:
  workflow_call:

jobs:
  build:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build SDist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: "wheels-dist"
          path: dist/*.tar.gz

  build_wheels:
    name: Build wheels
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        include:
          - { os: macos-12, arch: x86_64 }
          # - { os: macos-12, arch: arm64 }
          - { os: windows-latest, arch: x86 }
          - { os: windows-latest, arch: AMD64 }
          - { os: ubuntu-latest, arch: x86_64 }
    steps:
      - uses: actions/checkout@v4

      - run: pipx run cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD_VERBOSITY: 1
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_BUILD: "cp38*"

      - run: ls ./wheelhouse/

      - uses: actions/upload-artifact@v4
        with:
          name: "wheels-${{ runner.os }}-${{ matrix.arch }}-${{ strategy.job-index }}"
          path: ./wheelhouse/*.whl

  merge-wheel-artifact:
    runs-on: ubuntu-latest
    needs: ["build_wheels", "build"]
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: wheel
          pattern: wheels-*

  check_dist:
    name: Check dist
    needs: [merge-wheel-artifact]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: wheel
          path: dist

      - run: pipx run twine check --strict dist/*
