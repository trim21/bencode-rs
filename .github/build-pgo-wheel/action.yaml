name: Build PGO wheel
description: Builds a PGO-optimized wheel
inputs:
  interpreter:
    description: 'Interpreter to build the wheel for'
    required: true

outputs:
  wheel:
    description: 'Path to the built wheel'
    value: ${{ steps.find_wheel.outputs.path }}

runs:
  using: "composite"
  steps:
    - name: prepare profiling directory
      shell: bash
      run: mkdir -p ${{ github.workspace }}/profdata

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.interpreter }}
        cache: "pip"

    - name: build initial wheel
      uses: PyO3/maturin-action@v1
      with:
        manylinux: auto
        args: >
          --release
          --out pgo-wheel
          --interpreter ${{ inputs.interpreter }}
        docker-options: -e CI
      env:
        RUSTFLAGS: '-Cprofile-generate=${{ github.workspace }}/profdata'

    - name: generate pgo data
      run: |
        pip install -r ./requirements.txt
        pip install bencode-rs --no-index --find-link pgo-wheel/
        python pytest tests/bench.py
      shell: bash

    - name: merge pgo data
      run: llvm-profdata merge -o ${{ github.workspace }}/merged.profdata ${{ github.workspace }}/profdata
      shell: bash

    - name: build pgo-optimized wheel
      uses: PyO3/maturin-action@v1
      with:
        manylinux: auto
        args: >
          --release
          --out dist
          --interpreter ${{ inputs.interpreter }}
        docker-options: -e CI
      env:
        RUSTFLAGS: '-Cprofile-use=${{ github.workspace }}/merged.profdata'
